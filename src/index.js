const getCase = require("./comporte/getCase");
const getCases = require("./comporte/getCases");
const getArrayIndex = require("./utils/getArrayIndex");
const getCaseNumbersInserted = require("./utils/getCaseNumbersInserted");
const getCasePage = require("./utils/getCasePage");
const insertLog = require("./utils/insertLog");
const putTicketIdInDatabaseRecord = require("./utils/putTicketIdInDatabaseRecord");
const sendCaseToZendesk = require("./utils/sendCaseToZendesk");
const updateArrayIndex = require("./utils/updateArrayIndex");
const updateCasePage = require("./utils/updateCasePage");
const deleteTicket = require("./zendesk/deleteTicket");
const findTicket = require("./zendesk/findTicket");

const init = async () => {
  // obtem os casos
  // const casePage = getCasePage();
  const casePage = null;
  const caseNumbers = [
    "00146585",
    "00145645",
    "00146952",
    "00146066",
    "00148582",
    "00148961",
    "00150739",
    "00150784",
    "00151324",
    "00161297",
    "00161428",
    "00162453",
    "00161681",
    "00164612",
    "00163845",
    "00164990",
    "00168191",
    "00169237",
    "00169247",
    "00170247",
    "00170405",
    "00184706",
    "00185713",
    "00184979",
    "00186913",
    "00188272",
    "00189324",
    "00189301",
    "00189505",
    "00189492",
    "00189522",
    "00189587",
    "00187993",
    "00171780",
    "00175101",
    "00176164",
    "00176433",
    "00176512",
    "00176843",
    "00190121",
    "00190114",
    "00190739",
    "00178866",
    "00192379",
    "00193670",
    "00195286",
    "00196463",
    "00197025",
    "00197239",
    "00204982",
    "00205393",
    "00204455",
    "00180005",
    "00208365",
    "00208847",
    "00212060",
    "00214442",
    "00215516",
    "00216989",
    "00217245",
    "00222355",
    "00222486",
    "00224035",
    "00226418",
    "00227510",
    "00228030",
    "00228231",
    "00228678",
    "00230796",
    "00229976",
    "00229977",
    "00231288",
    "00235426",
    "00234706",
    "00236004",
    "00237598",
    "00237595",
    "00238415",
    "00238414",
    "00252914",
    "00253066",
    "00252126",
    "00253417",
    "00253419",
    "00253885",
    "00254211",
    "00254213",
    "00254675",
    "00255274",
    "00255575",
    "00255573",
    "00255576",
    "00255894",
    "00255895",
    "00255896",
    "00255897",
    "00239634",
    "00239632",
    "00240234",
    "00240603",
    "00240966",
    "00242509",
    "00241389",
    "00241564",
    "00242770",
    "00242771",
    "00242773",
    "00243612",
    "00246719",
    "00247088",
    "00248771",
    "00248770",
    "00250341",
    "00250553",
    "00250672",
    "00256443",
    "00256444",
    "00256441",
    "00256445",
    "00256442",
    "00256446",
    "00257898",
    "00258960",
    "00258961",
    "00258962",
    "00259805",
    "00259803",
    "00259816",
    "00259818",
    "00260297",
    "00260949",
    "00260952",
    "00262749",
    "00262750",
    "00262753",
    "00262751",
    "00262752",
    "00262754",
    "00262799",
    "00263010",
    "00263248",
    "00263709",
    "00263710",
    "00263917",
    "00266474",
    "00264486",
    "00266480",
    "00264554",
    "00268587",
    "00268847",
    "00268836",
    "00268225",
    "00269869",
    "00269958",
    "00269941",
    "00270001",
    "00271337",
    "00271437",
    "00271464",
    "00271056",
    "00272504",
    "00272553",
    "00272576",
    "00273373",
    "00275712",
    "00273624",
    "00275911",
    "00275982",
    "00275921",
    "00275922",
    "00276001",
    "00274063",
    "00274440",
    "00274748",
    "00276781",
    "00275378",
    "00276823",
    "00278561",
    "00282427",
    "00282989",
    "00283966",
    "00281807",
    "00284964",
    "00284951",
    "00284988",
    "00286999",
    "00287110",
    "00287495",
    "00287781",
    "00287789",
    "00288017",
    "00288191",
    "00289259",
    "00288533",
    "00289622",
    "00289826",
    "00292268",
    "00292937",
    "00293921",
    "00293886",
    "00278249",
    "00295482",
    "00297140",
    "00295739",
    "00297208",
    "00297153",
    "00297826",
    "00298136",
    "00298286",
    "00299763",
    "00299765",
    "00298302",
    "00298344",
    "00298305",
    "00298334",
    "00298345",
    "00298350",
    "00298351",
    "00298389",
    "00299855",
    "00299916",
    "00299919",
    "00299253",
    "00321612",
    "00321702",
    "00321718",
    "00321853",
    "00321946",
    "00301815",
    "00322435",
    "00302079",
    "00304514",
    "00302521",
    "00302645",
    "00302820",
    "00302871",
    "00302816",
    "00302951",
    "00323366",
    "00323646",
    "00305547",
    "00324047",
    "00324049",
    "00325235",
    "00325296",
    "00325315",
    "00325408",
    "00325573",
    "00326090",
    "00326354",
    "00307244",
    "00511089",
    "00512303",
    "00512726",
    "00512813",
    "00512948",
    "00311425",
    "00311386",
    "00311850",
    "00312141",
    "00312436",
    "00312566",
    "00313008",
    "00310766",
    "00313205",
    "00313282",
    "00313684",
    "00314115",
    "00315923",
    "00317538",
    "00319502",
    "00318187",
    "00326776",
    "00326774",
    "00331220",
    "00329898",
    "00329944",
    "00332134",
    "00333937",
    "00333241",
    "00334570",
    "00333802",
    "00337378",
    "00337685",
    "00337999",
    "00338407",
    "00338408",
    "00341440",
    "00339371",
    "00339649",
    "00339979",
    "00339983",
    "00340017",
    "00342016",
    "00340138",
    "00342466",
    "00357206",
    "00358541",
    "00359841",
    "00358908",
    "00361322",
    "00361419",
    "00361462",
    "00344165",
    "00362547",
    "00344467",
    "00361537",
    "00345393",
    "00344727",
    "00362777",
    "00362859",
    "00345839",
    "00363349",
    "00347843",
    "00363982",
    "00365736",
    "00366153",
    "00366580",
    "00366681",
    "00366687",
    "00366596",
    "00366761",
    "00367510",
    "00365029",
    "00349726",
    "00350135",
    "00368736",
    "00352150",
    "00369277",
    "00370541",
    "00369804",
    "00351119",
    "00369870",
    "00352507",
    "00371274",
    "00351454",
    "00352647",
    "00353038",
    "00355229",
    "00355201",
    "00353842",
    "00371509",
    "00371819",
    "00374126",
    "00374131",
    "00374787",
    "00376930",
    "00379018",
    "00377764",
    "00377772",
    "00378007",
    "00377982",
    "00378105",
    "00379626",
    "00378306",
    "00379713",
    "00379681",
    "00379819",
    "00380499",
    "00382515",
    "00382688",
    "00382706",
    "00383250",
    "00383269",
    "00383472",
    "00384092",
    "00385677",
    "00385747",
    "00385876",
    "00385852",
    "00386042",
    "00386198",
    "00386334",
    "00386504",
    "00386499",
    "00386738",
    "00387487",
    "00384916",
    "00384931",
    "00403504",
    "00403935",
    "00404201",
    "00404533",
    "00405090",
    "00405363",
    "00405697",
    "00405951",
    "00411933",
    "00413920",
    "00413921",
    "00412825",
    "00413203",
    "00416317",
    "00417577",
    "00417675",
    "00416675",
    "00417950",
    "00417948",
    "00388138",
    "00388207",
    "00389082",
    "00391739",
    "00392098",
    "00392131",
    "00392787",
    "00394621",
    "00395333",
    "00395854",
    "00396276",
    "00396179",
    "00396420",
    "00396721",
    "00396818",
    "00398116",
    "00402688",
    "00402721",
    "00433727",
    "00434219",
    "00418848",
    "00421047",
    "00421156",
    "00421209",
    "00439226",
    "00438212",
    "00439678",
    "00423348",
    "00443312",
    "00441252",
    "00443832",
    "00425628",
    "00446192",
    "00446343",
    "00448154",
    "00428521",
    "00448658",
    "00429455",
    "00430040",
    "00431519",
    "00431827",
    "00430672",
    "00432720",
    "00432907",
    "00433482",
    "00452030",
    "00451377",
    "00451783",
    "00454589",
    "00455308",
    "00455224",
    "00457261",
    "00457293",
    "00458624",
    "00460345",
    "00459347",
    "00463135",
    "00462446",
    "00462503",
    "00464814",
    "00485110",
    "00486246",
    "00487435",
    "00487622",
    "00489578",
    "00489873",
    "00491146",
    "00491143",
    "00494304",
    "00496595",
    "00496791",
    "00497754",
    "00498746",
    "00498747",
    "00500208",
    "00468921",
    "00467459",
    "00467646",
    "00469310",
    "00467889",
    "00469996",
    "00472378",
    "00471852",
    "00473773",
    "00479952",
    "00501359",
    "00502889",
    "00503501",
    "00505897",
    "00505006",
    "00506445",
    "00508936",
    "00510116",
    "00510262",
    "00508018",
    "00508641",
    "00508589",
    "00532676",
    "00532680",
    "00533244",
    "00533142",
    "00533780",
    "00534507",
    "00516447",
    "00516449",
    "00537308",
    "00515169",
    "00536152",
    "00515983",
    "00538241",
    "00538236",
    "00539298",
    "00520269",
    "00541970",
    "00542691",
    "00542969",
    "00522841",
    "00547395",
    "00547527",
    "00523448",
    "00525843",
    "00545740",
    "00550230",
    "00550305",
    "00550571",
    "00528366",
    "00527807",
    "00530017",
    "00551104",
    "00551163",
    "00552853",
    "00552866",
    "00552083",
    "00556443",
    "00554610",
    "00554977",
    "00555108",
    "00555212",
    "00555360",
    "00557530",
    "00557478",
    "00557614",
    "00557823",
    "00558686",
    "00558845",
    "00559133",
    "00559786",
    "00560018",
    "00560175",
    "00562027",
    "00562749",
    "00562892",
    "00563030",
    "00564844",
    "00563407",
    "00565863",
    "00566091",
    "00566183",
    "00566643",
    "00566756",
    "00566852",
    "00566960",
    "00567219",
    "00585710",
    "00586373",
    "00585125",
    "00586395",
    "00585184",
    "00587043",
    "00587423",
    "00588378",
    "00588763",
    "00588989",
    "00589171",
    "00591293",
    "00591478",
    "00592233",
    "00593910",
    "00595070",
    "00596237",
    "00569109",
    "00567824",
    "00571608",
    "00575882",
    "00579907",
    "00580459",
    "00584534",
    "00584919",
    "00583910",
    "00622349",
    "00622494",
    "00622916",
    "00623416",
    "00623421",
    "00623389",
    "00623418",
    "00623974",
    "00624864",
    "00624869",
    "00625373",
    "00627472",
    "00625973",
    "00626101",
    "00627111",
    "00627229",
    "00627236",
    "00629421",
    "00629668",
    "00629746",
    "00629812",
    "00631086",
    "00631155",
    "00630128",
    "00631628",
    "00630482",
    "00632834",
    "00633287",
    "00633307",
    "00633431",
    "00634071",
    "00635869",
    "00636533",
    "00634595",
    "00638485",
    "00639404",
    "00639500",
    "00602866",
    "00603430",
    "00604350",
    "00602500",
    "00607593",
    "00607737",
    "00608388",
    "00609472",
    "00610022",
    "00610015",
    "00611864",
    "00613251",
    "00617812",
    "00618516",
    "00616867",
    "00619171",
    "00619421",
    "00619450",
    "00619986",
    "00620445",
    "00620480",
    "00620690",
    "00620769",
    "00641811",
    "00640257",
    "00641106",
    "00641102",
    "00642696",
    "00641192",
    "00641456",
    "00643638",
    "00643671",
    "00643702",
    "00649784",
    "00648371",
    "00649968",
    "00650754",
    "00648875",
    "00653979",
    "00654280",
    "00654667",
    "00660576",
    "00657343",
    "00656222",
    "00659027",
    "00665147",
    "00665173",
    "00665442",
    "00665638",
    "00665790",
    "00665805",
    "00665654",
    "00665791",
    "00665658",
    "00665824",
    "00665671",
    "00666032",
    "00666924",
    "00667431",
    "00667494",
    "00668418",
    "00668386",
    "00670500",
    "00670658",
    "00670725",
    "00671055",
    "00671222",
    "00671358",
    "00671715",
    "00671905",
    "00671924",
    "00672626",
    "00674849",
    "00675607",
    "00675424",
    "00675373",
    "00675700",
    "00677665",
    "00677685",
    "00677686",
    "00675888",
    "00677704",
    "00677815",
    "00676143",
    "00676322",
    "00676483",
    "00676695",
    "00676915",
    "00677342",
    "00678565",
    "00678760",
    "00680456",
    "00681449",
    "00683949",
    "00681811",
    "00682730",
    "00685944",
    "00690195",
    "00716750",
    "00718861",
    "00718883",
    "00719342",
    "00717384",
    "00719526",
    "00719619",
    "00717502",
    "00718130",
    "00697267",
    "00697582",
    "00697781",
    "00719688",
    "00720237",
    "00698150",
    "00720415",
    "00720910",
    "00721287",
    "00722665",
    "00722750",
    "00698867",
    "00698923",
    "00721607",
    "00721586",
    "00723013",
    "00723008",
    "00722033",
    "00723390",
    "00722179",
    "00699667",
    "00724138",
    "00724492",
    "00700338",
    "00724455",
    "00701679",
    "00724468",
    "00722374",
    "00700646",
    "00701972",
    "00724806",
    "00731996",
    "00707187",
    "00709558",
    "00709763",
    "00710222",
    "00710764",
    "00712202",
    "00712508",
    "00712608",
    "00713375",
    "00737630",
    "00740165",
    "00744610",
    "00748710",
    "00757159",
    "00758871",
    "00761304",
    "00789750",
    "00789948",
    "00789933",
    "00790672",
    "00790674",
    "00793161",
    "00799010",
    "00800788",
    "00801261",
    "00764395",
    "00765005",
    "00804195",
    "00771249",
    "00816887",
    "00771741",
    "00817154",
    "00817966",
    "00817979",
    "00811093",
    "00774844",
    "00772044",
    "00818383",
    "00818643",
    "00772346",
    "00772264",
    "00811555",
    "00811707",
    "00811694",
    "00772889",
    "00812362",
    "00773274",
    "00812635",
    "00819000",
    "00775741",
    "00780001",
    "00824364",
    "00779976",
    "00784003",
    "00783629",
    "00784297",
    "00786289",
    "00786323",
    "00786843",
    "00828271",
    "00831983",
    "00832098",
    "00833855",
    "00843317",
    "00845207",
    "00845274",
    "00845247",
    "00845234",
    "00845280",
    "00845245",
    "00845404",
    "00845249",
    "00845268",
    "00845318",
    "00845316",
    "00845282",
    "00845287",
    "00845407",
    "00845311",
    "00845314",
    "00845293",
    "00850064",
    "00850393",
    "00850981",
    "00850997",
    "00850985",
    "00850996",
    "00850999",
    "00854146",
    "00856326",
    "00856236",
    "00856246",
    "00856252",
    "00856333",
    "00852589",
    "00856804",
    "00856810",
    "00857892",
    "00858691",
    "00860330",
    "00858798",
    "00860319",
    "00864370",
    "00864656",
    "00862762",
    "00864440",
    "00864506",
    "00862858",
    "00863105",
    "00865398",
    "00863917",
    "00866181",
    "00866168",
    "00866982",
    "00869464",
    "00867041",
    "00869538",
    "00867206",
    "00876042",
    "00877523",
    "00880635",
    "00882253",
    "00888810",
    "00917851",
    "00919167",
    "00922138",
    "00922178",
    "00922275",
    "00919535",
    "00922258",
    "00919567",
    "00924018",
    "00925103",
    "00925112",
    "00925914",
    "00898748",
    "00901189",
    "00927238",
    "00902672",
    "00904459",
    "00906108",
    "00912930",
    "00916350",
    "00940414",
    "00940582",
    "00938630",
    "00944970",
    "00943884",
    "00943874",
    "00947446",
    "00949585",
    "00950011",
    "00948780",
    "00950819",
    "00953467",
    "00953464",
    "00951340",
    "00953803",
    "00953964",
    "00951763",
    "00954021",
    "00951727",
    "00954013",
    "00951917",
    "00954150",
    "00954357",
    "00954434",
    "00952446",
    "00952548",
    "00954463",
    "00952543",
    "00952496",
    "00954460",
    "00952553",
    "00952806",
    "00954875",
    "00960417",
    "00968466",
    "00977066",
    "00978052",
    "00980156",
    "00981895",
    "00982189",
    "00988774",
    "00989039",
    "00997565",
    "01000998",
    "01012458",
    "01014484",
    "01019555",
    "01019638",
    "01044091",
    "01044025",
    "01047330",
    "01047824",
    "01048528",
    "01046989",
    "01050540",
    "01028063",
    "01032096",
    "01032411",
    "01032991",
    "01033546",
    "01055997",
    "01056005",
    "01036601",
    "01060857",
    "01060952",
    "01060933",
    "01038639",
    "01040667",
    "01041441",
    "01041442",
    "01041448",
    "01041456",
    "01041491",
    "01041465",
    "01042303",
    "01042304",
    "01061871",
    "01062145",
    "01064684",
    "01064685",
    "01064580",
    "01064776",
    "01065035",
    "01064932",
    "01066459",
    "01067068",
    "01069058",
    "01067574",
    "01069255",
    "01069871",
    "01069919",
    "01070460",
    "01070441",
    "01068204",
    "01070753",
    "01070820",
    "01068750",
    "01071285",
    "01074222",
    "01072001",
    "01074305",
    "01074375",
    "01074353",
    "01074310",
    "01074415",
    "01072308",
    "01072321",
    "01073156",
    "01073332",
    "01074838",
    "01073309",
    "01076124",
    "01078517",
    "01078836",
    "01079752",
    "01080653",
    "01085278",
    "01086124",
    "01083105",
    "01083821",
    "01089921",
    "01090828",
    "01096103",
    "01094964",
    "01097073",
    "01097240",
    "01097469",
    "01097502",
    "01097539",
    "01097566",
    "01097957",
    "01098233",
    "01099532",
    "01098509",
    "01100337",
    "01100709",
    "01100741",
    "01101406",
    "01101697",
    "01101816",
    "01102465",
    "01102475",
    "01102625",
    "01103146",
    "01103223",
    "01104574",
    "01106820",
    "01105503",
    "01105495",
    "01113429",
    "01115034",
    "01118662",
    "01118743",
    "01120905",
    "01125252",
    "01127885",
    "01130746",
    "01132821",
    "01133791",
    "01133917",
    "01133953",
    "01136926",
    "01133981",
    "01156970",
    "01156994",
    "01159093",
    "01161223",
    "01161292",
    "01161748",
    "01161716",
    "01162208",
    "01162321",
    "01162420",
    "01162433",
    "01162525",
    "01162526",
    "01162524",
    "01162523",
    "01165435",
    "01163134",
    "01163291",
    "01165511",
    "01165106",
    "01167021",
    "01165167",
    "01165201",
    "01139144",
    "01137308",
    "01137290",
    "01137411",
    "01137977",
    "01138898",
    "01138871",
    "01142166",
    "01141331",
    "01143657",
    "01145441",
    "01144271",
    "01145048",
    "01149087",
    "01149233",
    "01147353",
    "01149364",
    "01149443",
    "01148432",
    "01153586",
    "01174034",
    "01174030",
    "01174033",
    "01177002",
    "01180295",
    "01180323",
    "01178380",
    "01184830",
    "01189213",
    "01193394",
    "01197227",
    "01199524",
    "01200609",
    "01200811",
    "01201120",
    "01201123",
    "01204626",
    "01210144",
    "01222188",
    "01225227",
    "01227356",
    "01227357",
    "01228305",
    "01234174",
    "01241043",
    "01241546",
    "01241575",
    "01241582",
    "01214194",
    "01243648",
    "01251161",
    "01254937",
    "01257567",
    "01257786",
    "01262213",
    "01267142",
    "01270284",
    "01270591",
    "01282783",
    "01283233",
    "01284735",
    "01284745",
    "01284851",
    "01301579",
    "01301702",
    "01308280",
    "01308345",
    "01291657",
    "01294716",
    "01295070",
    "01295072",
    "01311112",
    "01311113",
    "01297594",
    "01296934",
    "01312778",
    "01299053",
    "01299375",
    "01327516",
    "01330394",
    "01316245",
    "01320814",
    "01321858",
    "01347845",
    "01352330",
    "01353228",
    "01357424",
    "01357419",
    "01360168",
    "01363443",
  ];

  if (casePage) {
    console.log(`Obtendo os casos da página ${casePage}...`);
    const options = {
      subject: "Ligação Muda / Engano - Ligação Muda / Engano",
    };
    const cases = await getCases(casePage, 100, options);

    if (!cases?.length) {
      console.log(`Nenhum caso encontrado na página ${casePage}.`);
      process.exit(0);
    }

    // obtem o numero dos casos
    const _caseNumbers = cases?.map((c) => c.CASENUMBER);
    if (_caseNumbers?.length) {
      caseNumbers.push(..._caseNumbers);
    }
  }

  const caseNumbersInserted = getCaseNumbersInserted();
  const arrayIndex = getArrayIndex();

  // itera sobre os casos
  for (let i = 0; i < caseNumbers?.length || 0; i++) {
    const caseNumber = caseNumbers[i];

    if (caseNumbersInserted?.includes(caseNumber)) {
      console.log(`Caso ${caseNumber} já inserido!`);
      continue;
    }

    // checa se o ticket ja existe na zendesk
    console.log(`Verificando existência do caso ${caseNumber} na Zendesk...`);
    const [foundTicket, ...rest] = await findTicket(caseNumber);
    if (foundTicket) {
      console.log(
        `Caso ${caseNumber} já presente na Zendesk (ticket ${foundTicket.id}).`
      );

      if (rest.length) {
        insertLog(
          {
            error: `Caso ${caseNumber} duplicado na Zendesk!`,
            case: caseNumber,
          },
          true
        );
      }

      continue;
    }

    console.log(
      `Obtendo o caso ${caseNumber} (${i + 1}/${caseNumbers.length})...`
    );
    const foundCase = await getCase(caseNumber);

    if (!foundCase) {
      console.log(`Caso ${caseNumber} não encontrado!`);
      insertLog(
        {
          error: `Caso ${caseNumber} não encontrado!`,
          case: caseNumber,
        },
        true
      );
      continue;
    }
    try {
      console.log(`Enviando o caso ${foundCase.CASENUMBER} para a Zendesk...`);
      const ticketId = await sendCaseToZendesk(foundCase);

      // atualiza o registro no banco de dados com o id do ticket
      await putTicketIdInDatabaseRecord(foundCase.ID, ticketId);

      // registra o log da inserção
      insertLog({ case: foundCase.CASENUMBER, ticket_id: ticketId });

      // atualiza no log o index do array do proximo caso em arquivo
      // updateArrayIndex(i + 1);
    } catch (error) {
      if (Object.keys(error).length) {
        if (error.ticket_id) {
          // deletar o ticket na zendesk
          console.log(`Deletando o ticket ${error.ticket_id} na Zendesk...`);
          try {
            await deleteTicket(error.ticket_id);
          } catch (error) {
            insertLog({ ...error, case: caseNumber, page: casePage }, true);
          }
        } else {
          insertLog({ ...error, case: caseNumber, page: casePage }, true);
        }
      } else {
        console.log(error);
        insertLog({ error, case: caseNumber, page: casePage }, true);
      }
    }
  }

  // atualiza no log com a proxima pagina de busca de casos
  if (casePage) {
    updateCasePage(casePage + 1);
    init();
  }
};

init();
